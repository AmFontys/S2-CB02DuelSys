<Project>
  <Name>DuelSync</Name>
  <ProjectItem type="NClass.DiagramEditor.ClassDiagram.Diagram" assembly="NClass.DiagramEditor, Version=2.4.1823.0, Culture=neutral, PublicKeyToken=null">
    <Name>AllClasses</Name>
    <Language>CSharp</Language>
    <Entities>
      <Entity type="Class">
        <Name>AccountDAL</Name>
        <Access>Public</Access>
        <Location left="1779" top="123" />
        <Size width="356" height="158" />
        <Collapsed>False</Collapsed>
        <Member type="Method">private bool CheckSingleResult(MySQlCommand command)</Member>
        <Member type="Method">private DataSet CheckMultipleResults(MySQlCommand command)</Member>
        <Modifier>None</Modifier>
      </Entity>
      <Entity type="Class">
        <Name>Player</Name>
        <Access>Public</Access>
        <Location left="920" top="560" />
        <Size width="691" height="216" />
        <Collapsed>False</Collapsed>
        <Member type="Field">private string _team</Member>
        <Member type="Constructor">public Player(string name, string email, string team, DateTime birthdate, char gender, string address, string town, string password)</Member>
        <Modifier>None</Modifier>
      </Entity>
      <Entity type="Interface">
        <Name>ICompanyDAL</Name>
        <Access>Public</Access>
        <Location left="1250" top="1414" />
        <Size width="162" height="216" />
        <Collapsed>False</Collapsed>
        <Member type="Method">DataSet GetCompanys()</Member>
      </Entity>
      <Entity type="Class">
        <Name>CompanyDAL</Name>
        <Access>Public</Access>
        <Location left="1281" top="1088" />
        <Size width="162" height="216" />
        <Collapsed>False</Collapsed>
        <Modifier>None</Modifier>
      </Entity>
      <Entity type="Class">
        <Name>CompanyManager</Name>
        <Access>Public</Access>
        <Location left="963" top="1425" />
        <Size width="162" height="216" />
        <Collapsed>False</Collapsed>
        <Member type="Method">public List&lt;Company&gt; GetCompanys()</Member>
        <Modifier>None</Modifier>
      </Entity>
      <Entity type="Interface">
        <Name>IAccountDAL</Name>
        <Access>Public</Access>
        <Location left="1177" top="178" />
        <Size width="434" height="299" />
        <Collapsed>False</Collapsed>
        <Member type="Method">bool AddAccount(Player account)</Member>
        <Member type="Method">bool AddAccount(Staff staff)</Member>
        <Member type="Method">bool UpdateAccount(Player player)</Member>
        <Member type="Method">bool UpdateAccount(Staff staff)</Member>
        <Member type="Method">DataSet GetPlayers()</Member>
        <Member type="Method">DateSet GetAccounts()</Member>
        <Member type="Method">DataSet GetStaff()</Member>
        <Member type="Method">bool DeleteAccount(int id)</Member>
        <Member type="Method">bool tournamentSignup(int playerId, int tournamentId)</Member>
        <Member type="Method">DataSet GetAccount(string email)</Member>
        <Member type="Method">DataSet GetAccount(string email, string employeeKey)</Member>
        <Member type="Method">bool CheckValidEmail(string email, out string key)</Member>
        <Member type="Method">bool CheckValidPassword(string email, string password)</Member>
        <Member type="Method">bool CheckEmployeeKey(string email, string password, string key)</Member>
      </Entity>
      <Entity type="Class">
        <Name>AccountManager</Name>
        <Access>Public</Access>
        <Location left="85" top="73" />
        <Size width="967" height="383" />
        <Collapsed>False</Collapsed>
        <Member type="Method">public bool AddAccount(string name, string email, string team, DateTime birthdate, char gender, string address, string town, string password)</Member>
        <Member type="Method">public bool AddAccount(string name, string email, DateTime birthdate, char gender, string address, string town, string password, string employeeKey)</Member>
        <Member type="Method">public bool AddAccount(string name, string email, DateTime birthdate, char gender, string address, string town, string password, string employeeKey, Company company)</Member>
        <Member type="Method">public bool UpdateAccount(int id, string name, string email, string team, DateTime birthdate, char gender, string address, string town, string password)</Member>
        <Member type="Method">public bool UpdateAccount(int id, string name, string email, DateTime birthdate, char gender, string address, string town, string password, string employeeKey)</Member>
        <Member type="Method">public bool UpdateAccount(int id, string name, string email, DateTime birthdate, char gender, string address, string town, string password, string employeeKey, Company company)</Member>
        <Member type="Method">public List&lt;Player&gt; GetPlayers()</Member>
        <Member type="Method">public List&lt;Account&gt; GetAccounts()</Member>
        <Member type="Method">public List&lt;Staff&gt; GetStaff()</Member>
        <Member type="Method">public bool DeleteAccount(int id)</Member>
        <Member type="Method">public bool tournamentSignup(int playerId, int tournamentId)</Member>
        <Member type="Method">public Player GetAccount(string email)</Member>
        <Member type="Method">public Staff GetAccount(string email, string employeeKey)</Member>
        <Member type="Method">public bool Login(string email, string password)</Member>
        <Member type="Method">public bool Login(string email, string password, string employeeKey)</Member>
        <Member type="Method">private bool CheckValidEmail(string email, out string key)</Member>
        <Member type="Method">private bool CheckValidPassword(string email, string password)</Member>
        <Member type="Method">private bool CheckEmployeeKey(string email, string password, string key)</Member>
        <Modifier>None</Modifier>
      </Entity>
      <Entity type="Class">
        <Name>Account</Name>
        <Access>Public</Access>
        <Location left="69" top="497" />
        <Size width="691" height="315" />
        <Collapsed>False</Collapsed>
        <Member type="Field">private string _name</Member>
        <Member type="Field">private string _email</Member>
        <Member type="Field">private DateTime _birthdate</Member>
        <Member type="Field">private char _gender</Member>
        <Member type="Field">private string _address</Member>
        <Member type="Field">private string _town</Member>
        <Member type="Field">private string _password</Member>
        <Member type="Field">private string _keyword</Member>
        <Member type="Constructor">public Account(string name, string email, DateTime birthdate, char gender, string address, string town, string password)</Member>
        <Member type="Method">public static string EncryptPassword(string password)</Member>
        <Member type="Method">private static byte[] GenerateKeyword()</Member>
        <Member type="Method">private static string GeneratePassword(string password, byte[] key)</Member>
        <Modifier>None</Modifier>
      </Entity>
      <Entity type="Class">
        <Name>Staff</Name>
        <Access>Public</Access>
        <Location left="85" top="881" />
        <Size width="808" height="216" />
        <Collapsed>False</Collapsed>
        <Member type="Field">private string _employeeKey</Member>
        <Member type="Constructor">public Staff(string name, string email, DateTime birthdate, char gender, string address, string town, string password, string employeeKey)</Member>
        <Member type="Constructor">public Staff(string name, string email, DateTime birthdate, char gender, string address, string town, string password, string employeeKey, Company company)</Member>
        <Member type="Method">public static void GenerateEmployeeKey(string dateUTCNow, string name, string email, string birthdate)</Member>
        <Modifier>None</Modifier>
      </Entity>
      <Entity type="Class">
        <Name>company</Name>
        <Access>Public</Access>
        <Location left="920" top="1100" />
        <Size width="236" height="216" />
        <Collapsed>False</Collapsed>
        <Member type="Field">private string _companyName</Member>
        <Member type="Field">private string _companyLocation</Member>
        <Member type="Constructor">public company(string name, string location)</Member>
        <Modifier>None</Modifier>
      </Entity>
      <Entity type="Class">
        <Name>ScheduleManager</Name>
        <Access>Public</Access>
        <Location left="3846" top="1409" />
        <Size width="379" height="162" />
        <Collapsed>False</Collapsed>
        <Member type="Constructor">public ScheduleManager(IScheduleDAL dal, IMatchDAL matchDal)</Member>
        <Member type="Method">public bool StartTournament(int tournamentId)</Member>
        <Member type="Method">public bool NextRound(Iint tournementId)</Member>
        <Member type="Method">public List&lt;Schedule&gt; GetSchedule(int tournamentId)</Member>
        <Modifier>None</Modifier>
      </Entity>
      <Entity type="Interface">
        <Name>IMatchDAL</Name>
        <Access>Public</Access>
        <Location left="2739" top="1853" />
        <Size width="373" height="216" />
        <Collapsed>False</Collapsed>
        <Member type="Method">bool CreateMatcht(int tournamentId, int playerId1, int playerId2)</Member>
        <Member type="Method">bool UpdateMatch(int tournamentId, int score1, int score2)</Member>
      </Entity>
      <Entity type="Class">
        <Name>MatchManager</Name>
        <Access>Public</Access>
        <Location left="1819" top="1753" />
        <Size width="791" height="216" />
        <Collapsed>False</Collapsed>
        <Member type="Constructor">public MatchManager(IMatchtDAL dal)</Member>
        <Member type="Method">public bool CreateMatch(int tournamentId, int playerId1, int playerId2)</Member>
        <Member type="Method">public bool UpdateMatcht(int tournamentid, int score1, int score2)</Member>
        <Member type="Method">public List&lt;Match&gt; GetMatches(int tournamentId)</Member>
        <Modifier>None</Modifier>
      </Entity>
      <Entity type="Interface">
        <Name>IScheduleDAL</Name>
        <Access>Public</Access>
        <Location left="3723" top="1709" />
        <Size width="321" height="124" />
        <Collapsed>False</Collapsed>
        <Member type="Method">bool StartTournament(List&lt;string&gt; matches, int tourId)</Member>
        <Member type="Method">bool NextRound(List&lt;string&gt; matches)</Member>
        <Member type="Method">DataSet GetSchedule(int tournamentId)</Member>
      </Entity>
      <Entity type="Class">
        <Name>Match</Name>
        <Access>Public</Access>
        <Location left="1919" top="1437" />
        <Size width="388" height="196" />
        <Collapsed>False</Collapsed>
        <Member type="Field">int _tournamentId</Member>
        <Member type="Field">Player _player1</Member>
        <Member type="Field">Player _player2</Member>
        <Member type="Field">int _scorePlayer1</Member>
        <Member type="Field">int _scorePlayer2</Member>
        <Member type="Constructor">public Match(int id, Player player1, Player player2, int score1, int score2)</Member>
        <Modifier>None</Modifier>
      </Entity>
      <Entity type="Class">
        <Name>ScheduleDAL</Name>
        <Access>Public</Access>
        <Location left="3238" top="1853" />
        <Size width="427" height="124" />
        <Collapsed>False</Collapsed>
        <Member type="Method">private bool CheckSingleResult(MySQlCommand command)</Member>
        <Member type="Method">private bool CheckMultipleResults(MySQlCommand command, out DataSet data)</Member>
        <Modifier>None</Modifier>
      </Entity>
      <Entity type="Class">
        <Name>MatchDAL</Name>
        <Access>Public</Access>
        <Location left="2449" top="2129" />
        <Size width="427" height="216" />
        <Collapsed>False</Collapsed>
        <Member type="Method">private bool CheckSingleResult(MySQlCommand command)</Member>
        <Member type="Method">private bool CheckMultipleResults(MySQlCommand command, out DataSet data)</Member>
        <Modifier>None</Modifier>
      </Entity>
      <Entity type="Class">
        <Name>Tournament</Name>
        <Access>Public</Access>
        <Location left="1819" top="1023" />
        <Size width="955" height="264" />
        <Collapsed>False</Collapsed>
        <Member type="Field">int _tournamentID</Member>
        <Member type="Field">string _tournamentName</Member>
        <Member type="Field">string _tournamantDescription</Member>
        <Member type="Field">int _minPlayers</Member>
        <Member type="Field">int _maxPlayers</Member>
        <Member type="Field">string _currentStatus</Member>
        <Member type="Field">DateTime _startDate</Member>
        <Member type="Field">DateTime _endDate</Member>
        <Member type="Constructor">public Tournament(int id, string name, string description, int min, int max, string status, DateTime start, DateTime end)</Member>
        <Member type="Constructor">public Tournament(int id, string name, string description, int min, int max, DateTime startDate, DateTime endDate, ITournamentType type)</Member>
        <Member type="Constructor">public Tournament(int id, string name, string description, int min, int max, string status, DateTime start, DateTime end, List&lt;Match&gt; matches, Sport sport, ITournamentType type)</Member>
        <Modifier>None</Modifier>
      </Entity>
      <Entity type="Class">
        <Name>TournamentManager</Name>
        <Access>Public</Access>
        <Location left="1953" top="582" />
        <Size width="791" height="230" />
        <Collapsed>False</Collapsed>
        <Member type="Constructor">public TournamentManager(ITournamentDAL dal)</Member>
        <Member type="Method">public bool CreateTournament(string name, string description, int min, int max, DateTime startDate, DateTime endDate, ITournamentType type)</Member>
        <Member type="Method">public void UpdateTournament(int id, string name, string description, int min, int max, string status, DateTime start, DateTime end)</Member>
        <Member type="Method">public bool UpdateTournament(int id, string status)</Member>
        <Member type="Method">public bool DeleteTournament(int id)</Member>
        <Member type="Method">public List&lt;Tournament&gt; GetTournaments(string status)</Member>
        <Member type="Method">public Tournament GetTournament(string name)</Member>
        <Member type="Method">public Tournament GetTournament(int id)</Member>
        <Member type="Method">public int[] GetSignUps(int tourId)</Member>
        <Modifier>None</Modifier>
      </Entity>
      <Entity type="Interface">
        <Name>ITournamentDAL</Name>
        <Access>Public</Access>
        <Location left="2810" top="582" />
        <Size width="162" height="216" />
        <Collapsed>False</Collapsed>
        <Member type="Method">bool CreateTournament(Tournament tournament)</Member>
        <Member type="Method">bool UpdateTournament(Tournament tournament)</Member>
        <Member type="Method">bool UpdateTournarment(int id, string status)</Member>
        <Member type="Method">bool DeleteTournament(int id)</Member>
        <Member type="Method">DataSet GetTournaments(string status)</Member>
        <Member type="Method">DataSet GetTournament(string name)</Member>
        <Member type="Method">DataSet GetTournament(int id)</Member>
        <Member type="Method">int[] GetSignUps(int tourId)</Member>
      </Entity>
      <Entity type="Interface">
        <Name>ITournamentType</Name>
        <Access>Public</Access>
        <Location left="3038" top="1251" />
        <Size width="267" height="216" />
        <Collapsed>False</Collapsed>
        <Member type="Method">static List&lt;string&gt; StartRound(int playerCount)</Member>
        <Member type="Method">static List&lt;string&gt; NextRound(int amountOfPlayers)</Member>
      </Entity>
      <Entity type="Class">
        <Name>TournamentDAL</Name>
        <Access>Public</Access>
        <Location left="3072" top="582" />
        <Size width="427" height="216" />
        <Collapsed>False</Collapsed>
        <Member type="Method">private bool CheckSingleResult(MySQlCommand command)</Member>
        <Member type="Method">private bool CheckMultipleResults(MySQlCommand command, out DataSet data)</Member>
        <Modifier>None</Modifier>
      </Entity>
      <Entity type="Class">
        <Name>RoundRobin</Name>
        <Access>Public</Access>
        <Location left="3416" top="1251" />
        <Size width="162" height="216" />
        <Collapsed>False</Collapsed>
        <Modifier>None</Modifier>
      </Entity>
      <Entity type="Class">
        <Name>Sport</Name>
        <Access>Public</Access>
        <Location left="2479" top="1469" />
        <Size width="375" height="216" />
        <Collapsed>False</Collapsed>
        <Member type="Field">int sportId</Member>
        <Member type="Field">string sportName</Member>
        <Member type="Field">string _winCondition1</Member>
        <Member type="Field">string _winCondition2</Member>
        <Member type="Field">string _winCondition3</Member>
        <Member type="Constructor">public Sport(int id, string name, string condition1)</Member>
        <Member type="Constructor">public Sport(int id, string name, string win1, string win2, string win3)</Member>
        <Modifier>None</Modifier>
      </Entity>
    </Entities>
    <Relationships>
      <Relationship type="Realization" first="3" second="2">
        <StartOrientation>Vertical</StartOrientation>
        <EndOrientation>Vertical</EndOrientation>
      </Relationship>
      <Relationship type="Association" first="4" second="2">
        <StartOrientation>Horizontal</StartOrientation>
        <EndOrientation>Horizontal</EndOrientation>
        <Direction>Unidirectional</Direction>
        <AssociationType>Association</AssociationType>
      </Relationship>
      <Relationship type="Association" first="4" second="9">
        <StartOrientation>Vertical</StartOrientation>
        <EndOrientation>Vertical</EndOrientation>
        <Direction>Unidirectional</Direction>
        <AssociationType>Association</AssociationType>
      </Relationship>
      <Relationship type="Realization" first="0" second="5">
        <StartOrientation>Vertical</StartOrientation>
        <EndOrientation>Horizontal</EndOrientation>
      </Relationship>
      <Relationship type="Association" first="6" second="5">
        <StartOrientation>Horizontal</StartOrientation>
        <EndOrientation>Horizontal</EndOrientation>
        <Direction>Unidirectional</Direction>
        <AssociationType>Association</AssociationType>
      </Relationship>
      <Relationship type="Association" first="6" second="7">
        <StartOrientation>Vertical</StartOrientation>
        <EndOrientation>Vertical</EndOrientation>
        <BendPoint relativeToStartShape="False">
          <X>272</X>
          <Y>465</Y>
        </BendPoint>
        <Direction>Unidirectional</Direction>
        <AssociationType>Association</AssociationType>
      </Relationship>
      <Relationship type="Association" first="8" second="9">
        <Label>
        </Label>
        <StartOrientation>Vertical</StartOrientation>
        <EndOrientation>Horizontal</EndOrientation>
        <Direction>Unidirectional</Direction>
        <AssociationType>Association</AssociationType>
        <StartMultiplicity>0..*</StartMultiplicity>
        <EndMultiplicity>1</EndMultiplicity>
      </Relationship>
      <Relationship type="Generalization" first="8" second="7">
        <StartOrientation>Vertical</StartOrientation>
        <EndOrientation>Vertical</EndOrientation>
      </Relationship>
      <Relationship type="Generalization" first="1" second="7">
        <StartOrientation>Horizontal</StartOrientation>
        <EndOrientation>Horizontal</EndOrientation>
        <BendPoint relativeToStartShape="True">
          <X>895</X>
          <Y>707</Y>
        </BendPoint>
        <BendPoint relativeToStartShape="False">
          <X>793</X>
          <Y>707</Y>
        </BendPoint>
      </Relationship>
      <Relationship type="Association" first="18" second="17">
        <StartOrientation>Vertical</StartOrientation>
        <EndOrientation>Vertical</EndOrientation>
        <BendPoint relativeToStartShape="True">
          <X>1980</X>
          <Y>850</Y>
        </BendPoint>
        <BendPoint relativeToStartShape="False">
          <X>1980</X>
          <Y>994</Y>
        </BendPoint>
        <Direction>Unidirectional</Direction>
        <AssociationType>Association</AssociationType>
        <StartMultiplicity>1</StartMultiplicity>
        <EndMultiplicity>0..*</EndMultiplicity>
      </Relationship>
      <Relationship type="Dependency" first="18" second="20">
        <Label>
        </Label>
        <StartOrientation>Vertical</StartOrientation>
        <EndOrientation>Vertical</EndOrientation>
        <BendPoint relativeToStartShape="False">
          <X>3172</X>
          <Y>1148</Y>
        </BendPoint>
      </Relationship>
      <Relationship type="Association" first="10" second="13">
        <Label>
        </Label>
        <StartOrientation>Horizontal</StartOrientation>
        <EndOrientation>Vertical</EndOrientation>
        <BendPoint relativeToStartShape="True">
          <X>4329</X>
          <Y>1516</Y>
        </BendPoint>
        <BendPoint relativeToStartShape="False">
          <X>3804</X>
          <Y>1684</Y>
        </BendPoint>
        <Direction>Unidirectional</Direction>
        <AssociationType>Association</AssociationType>
      </Relationship>
      <Relationship type="Dependency" first="10" second="12">
        <Label>
        </Label>
        <StartOrientation>Horizontal</StartOrientation>
        <EndOrientation>Horizontal</EndOrientation>
        <BendPoint relativeToStartShape="True">
          <X>3821</X>
          <Y>1548</Y>
        </BendPoint>
        <BendPoint relativeToStartShape="False">
          <X>2652</X>
          <Y>1785</Y>
        </BendPoint>
      </Relationship>
      <Relationship type="Association" first="17" second="14">
        <StartOrientation>Vertical</StartOrientation>
        <EndOrientation>Vertical</EndOrientation>
        <BendPoint relativeToStartShape="True">
          <X>2078</X>
          <Y>1312</Y>
        </BendPoint>
        <BendPoint relativeToStartShape="False">
          <X>2078</X>
          <Y>1410</Y>
        </BendPoint>
        <Direction>Unidirectional</Direction>
        <AssociationType>Association</AssociationType>
        <StartMultiplicity>1</StartMultiplicity>
        <EndMultiplicity>*</EndMultiplicity>
      </Relationship>
      <Relationship type="Realization" first="15" second="13">
        <StartOrientation>Horizontal</StartOrientation>
        <EndOrientation>Horizontal</EndOrientation>
      </Relationship>
      <Relationship type="Realization" first="16" second="11">
        <StartOrientation>Horizontal</StartOrientation>
        <EndOrientation>Horizontal</EndOrientation>
      </Relationship>
      <Relationship type="Association" first="12" second="14">
        <Label>
        </Label>
        <StartOrientation>Vertical</StartOrientation>
        <EndOrientation>Vertical</EndOrientation>
        <Direction>Unidirectional</Direction>
        <AssociationType>Association</AssociationType>
      </Relationship>
      <Relationship type="Association" first="12" second="11">
        <Label>
        </Label>
        <StartOrientation>Horizontal</StartOrientation>
        <EndOrientation>Horizontal</EndOrientation>
        <Direction>Unidirectional</Direction>
        <AssociationType>Association</AssociationType>
      </Relationship>
      <Relationship type="Realization" first="21" second="19">
        <StartOrientation>Horizontal</StartOrientation>
        <EndOrientation>Horizontal</EndOrientation>
      </Relationship>
      <Relationship type="Association" first="18" second="19">
        <Label>
        </Label>
        <StartOrientation>Horizontal</StartOrientation>
        <EndOrientation>Horizontal</EndOrientation>
        <Direction>Unidirectional</Direction>
        <AssociationType>Association</AssociationType>
      </Relationship>
      <Relationship type="Association" first="17" second="20">
        <StartOrientation>Horizontal</StartOrientation>
        <EndOrientation>Horizontal</EndOrientation>
        <Direction>Unidirectional</Direction>
        <AssociationType>Association</AssociationType>
        <StartMultiplicity>0..*</StartMultiplicity>
        <EndMultiplicity>1</EndMultiplicity>
      </Relationship>
      <Relationship type="Realization" first="22" second="20">
        <StartOrientation>Horizontal</StartOrientation>
        <EndOrientation>Horizontal</EndOrientation>
      </Relationship>
      <Relationship type="Association" first="17" second="23">
        <StartOrientation>Vertical</StartOrientation>
        <EndOrientation>Vertical</EndOrientation>
        <Direction>Unidirectional</Direction>
        <AssociationType>Association</AssociationType>
        <StartMultiplicity>0..1</StartMultiplicity>
        <EndMultiplicity>1</EndMultiplicity>
      </Relationship>
      <Relationship type="Association" first="17" second="1">
        <Label>
        </Label>
        <StartOrientation>Horizontal</StartOrientation>
        <EndOrientation>Horizontal</EndOrientation>
        <BendPoint relativeToStartShape="True">
          <X>1764</X>
          <Y>1144</Y>
        </BendPoint>
        <BendPoint relativeToStartShape="False">
          <X>1636</X>
          <Y>671</Y>
        </BendPoint>
        <Direction>Unidirectional</Direction>
        <AssociationType>Association</AssociationType>
      </Relationship>
      <Relationship type="Dependency" first="10" second="18">
        <Label>
        </Label>
        <StartOrientation>Vertical</StartOrientation>
        <EndOrientation>Vertical</EndOrientation>
        <BendPoint relativeToStartShape="True">
          <X>4036</X>
          <Y>1018</Y>
        </BendPoint>
        <BendPoint relativeToStartShape="False">
          <X>2730</X>
          <Y>868</Y>
        </BendPoint>
      </Relationship>
    </Relationships>
  </ProjectItem>
  <ProjectItem type="NClass.DiagramEditor.ClassDiagram.Diagram" assembly="NClass.DiagramEditor, Version=2.4.1823.0, Culture=neutral, PublicKeyToken=null">
    <Name>Tournament</Name>
    <Language>CSharp</Language>
    <Entities>
      <Entity type="Class">
        <Name>RoundRobin</Name>
        <Access>Public</Access>
        <Location left="1861" top="665" />
        <Size width="162" height="216" />
        <Collapsed>False</Collapsed>
        <Modifier>None</Modifier>
      </Entity>
      <Entity type="Class">
        <Name>Match</Name>
        <Access>Public</Access>
        <Location left="229" top="897" />
        <Size width="388" height="196" />
        <Collapsed>False</Collapsed>
        <Member type="Field">int _tournamentId</Member>
        <Member type="Field">Player _player1</Member>
        <Member type="Field">Player _player2</Member>
        <Member type="Field">int _scorePlayer1</Member>
        <Member type="Field">int _scorePlayer2</Member>
        <Member type="Constructor">public Match(int id, Player player1, Player player2, int score1, int score2)</Member>
        <Modifier>None</Modifier>
      </Entity>
      <Entity type="Class">
        <Name>Sport</Name>
        <Access>Public</Access>
        <Location left="789" top="814" />
        <Size width="375" height="216" />
        <Collapsed>False</Collapsed>
        <Member type="Field">int sportId</Member>
        <Member type="Field">string sportName</Member>
        <Member type="Field">string _winCondition1</Member>
        <Member type="Field">string _winCondition2</Member>
        <Member type="Field">string _winCondition3</Member>
        <Member type="Constructor">public Sport(int id, string name, string condition1)</Member>
        <Member type="Constructor">public Sport(int id, string name, string win1, string win2, string win3)</Member>
        <Modifier>None</Modifier>
      </Entity>
      <Entity type="Class">
        <Name>Tournament</Name>
        <Access>Public</Access>
        <Location left="431" top="487" />
        <Size width="955" height="264" />
        <Collapsed>False</Collapsed>
        <Member type="Field">int _tournamentID</Member>
        <Member type="Field">string _tournamentName</Member>
        <Member type="Field">string _tournamantDescription</Member>
        <Member type="Field">int _minPlayers</Member>
        <Member type="Field">int _maxPlayers</Member>
        <Member type="Field">string _currentStatus</Member>
        <Member type="Field">DateTime _startDate</Member>
        <Member type="Field">DateTime _endDate</Member>
        <Member type="Constructor">public Tournament(int id, string name, string description, int min, int max, string status, DateTime start, DateTime end)</Member>
        <Member type="Constructor">public Tournament(int id, string name, string description, int min, int max, DateTime startDate, DateTime endDate, ITournamentType type)</Member>
        <Member type="Constructor">public Tournament(int id, string name, string description, int min, int max, string status, DateTime start, DateTime end, List&lt;Match&gt; matches, Sport sport, ITournamentType type)</Member>
        <Modifier>None</Modifier>
      </Entity>
      <Entity type="Class">
        <Name>Player</Name>
        <Access>Public</Access>
        <Location left="82" top="505" />
        <Size width="264" height="167" />
        <Collapsed>False</Collapsed>
        <Member type="Field">private string _team</Member>
        <Member type="Constructor">public Player(string name, string email, string team, DateTime birthdate, char gender, string address, string town, string password)</Member>
        <Modifier>None</Modifier>
      </Entity>
      <Entity type="Class">
        <Name>TournamentManager</Name>
        <Access>Public</Access>
        <Location left="263" top="42" />
        <Size width="791" height="230" />
        <Collapsed>False</Collapsed>
        <Member type="Constructor">public TournamentManager(ITournamentDAL dal)</Member>
        <Member type="Method">public bool CreateTournament(string name, string description, int min, int max, DateTime startDate, DateTime endDate, ITournamentType type)</Member>
        <Member type="Method">public void UpdateTournament(int id, string name, string description, int min, int max, string status, DateTime start, DateTime end)</Member>
        <Member type="Method">public bool UpdateTournament(int id, string status)</Member>
        <Member type="Method">public bool DeleteTournament(int id)</Member>
        <Member type="Method">public List&lt;Tournament&gt; GetTournaments(string status)</Member>
        <Member type="Method">public Tournament GetTournament(string name)</Member>
        <Member type="Method">public Tournament GetTournament(int id)</Member>
        <Member type="Method">public int[] GetSignUps(int tourId)</Member>
        <Modifier>None</Modifier>
      </Entity>
      <Entity type="Interface">
        <Name>ITournamentType</Name>
        <Access>Public</Access>
        <Location left="1514" top="601" />
        <Size width="267" height="216" />
        <Collapsed>False</Collapsed>
        <Member type="Method">static List&lt;string&gt; StartRound(int[] playerCount)</Member>
        <Member type="Method">static List&lt;string&gt; NextRound(int[] amountOfPlayers)</Member>
      </Entity>
      <Entity type="Interface">
        <Name>ITournamentDAL</Name>
        <Access>Public</Access>
        <Location left="1120" top="42" />
        <Size width="162" height="216" />
        <Collapsed>False</Collapsed>
        <Member type="Method">bool CreateTournament(Tournament tournament)</Member>
        <Member type="Method">bool UpdateTournament(Tournament tournament)</Member>
        <Member type="Method">bool UpdateTournament(int id, string status)</Member>
        <Member type="Method">bool DeleteTournament(int id)</Member>
        <Member type="Method">DataSet GetTournaments(string status)</Member>
        <Member type="Method">DataSet GetTournament(string name)</Member>
        <Member type="Method">DataSet GetTournament(int id)</Member>
        <Member type="Method">int[] GetSignUps(int tourId)</Member>
      </Entity>
      <Entity type="Class">
        <Name>TournamentDAL</Name>
        <Access>Public</Access>
        <Location left="1382" top="42" />
        <Size width="427" height="216" />
        <Collapsed>False</Collapsed>
        <Member type="Method">private bool CheckSingleResult(MySQlCommand command)</Member>
        <Member type="Method">private bool CheckMultipleResults(MySQlCommand command, out DataSet data)</Member>
        <Modifier>None</Modifier>
      </Entity>
      <Entity type="Class">
        <Name>MatchDAL</Name>
        <Access>Public</Access>
        <Location left="190" top="1465" />
        <Size width="427" height="216" />
        <Collapsed>False</Collapsed>
        <Member type="Method">private bool CheckSingleResult(MySQlCommand command)</Member>
        <Member type="Method">private bool CheckMultipleResults(MySQlCommand command, out DataSet data)</Member>
        <Modifier>None</Modifier>
      </Entity>
      <Entity type="Interface">
        <Name>IMatchDAL</Name>
        <Access>Public</Access>
        <Location left="1051" top="1379" />
        <Size width="373" height="216" />
        <Collapsed>False</Collapsed>
        <Member type="Method">bool CreateMatcht(int tournamentId, int playerId1, int playerId2)</Member>
        <Member type="Method">bool UpdateMatch(int tournamentId, int score1, int score2)</Member>
        <Member type="Method">DataSet GetMatches(int tournamentId)</Member>
      </Entity>
      <Entity type="Class">
        <Name>MatchManager</Name>
        <Access>Public</Access>
        <Location left="87" top="1212" />
        <Size width="791" height="216" />
        <Collapsed>False</Collapsed>
        <Member type="Constructor">public MatchManager(IMatchtDAL dal)</Member>
        <Member type="Method">public bool CreateMatch(int tournamentId, int playerId1, int playerId2)</Member>
        <Member type="Method">public bool UpdateMatcht(int tournamentid, int score1, int score2)</Member>
        <Member type="Method">public List&lt;Match&gt; GetMatches(int tournamentId)</Member>
        <Modifier>None</Modifier>
      </Entity>
      <Entity type="Class">
        <Name>ScheduleDAL</Name>
        <Access>Public</Access>
        <Location left="1548" top="1476" />
        <Size width="427" height="124" />
        <Collapsed>False</Collapsed>
        <Member type="Method">private bool CheckSingleResult(MySQlCommand command)</Member>
        <Member type="Method">private bool CheckMultipleResults(MySQlCommand command, out DataSet data)</Member>
        <Modifier>None</Modifier>
      </Entity>
      <Entity type="Interface">
        <Name>IScheduleDAL</Name>
        <Access>Public</Access>
        <Location left="2033" top="1270" />
        <Size width="321" height="124" />
        <Collapsed>False</Collapsed>
        <Member type="Method">bool StartTournament(List&lt;string&gt; matches, int tourId)</Member>
        <Member type="Method">bool NextRound(List&lt;string&gt; matches)</Member>
      </Entity>
      <Entity type="Class">
        <Name>ScheduleManager</Name>
        <Access>Public</Access>
        <Location left="1950" top="998" />
        <Size width="379" height="162" />
        <Collapsed>False</Collapsed>
        <Member type="Constructor">public ScheduleManager(IScheduleDAL dal, IMatchDAL matchDal)</Member>
        <Member type="Method">public bool StartTournament(Tournement tourementId)</Member>
        <Member type="Method">public bool NextRound(Tournament tournamentId)</Member>
        <Modifier>None</Modifier>
      </Entity>
      <Entity type="Interface">
        <Name>ISportDAL</Name>
        <Access>Public</Access>
        <Location left="1234" top="1094" />
        <Size width="172" height="78" />
        <Collapsed>False</Collapsed>
        <Member type="Method">DataSet GetSports()</Member>
      </Entity>
      <Entity type="Class">
        <Name>SportDAL</Name>
        <Access>Public</Access>
        <Location left="1254" top="957" />
        <Size width="162" height="77" />
        <Collapsed>False</Collapsed>
        <Modifier>None</Modifier>
      </Entity>
      <Entity type="Class">
        <Name>SportManager</Name>
        <Access>Public</Access>
        <Location left="896" top="1076" />
        <Size width="195" height="120" />
        <Collapsed>False</Collapsed>
        <Member type="Constructor">public SportManager(IMatchtDAL dal)</Member>
        <Member type="Method">public List&lt;Sport&gt; GetSports()</Member>
        <Modifier>None</Modifier>
      </Entity>
    </Entities>
    <Relationships>
      <Relationship type="Association" first="3" second="2">
        <StartOrientation>Vertical</StartOrientation>
        <EndOrientation>Vertical</EndOrientation>
        <Direction>Unidirectional</Direction>
        <AssociationType>Association</AssociationType>
        <StartMultiplicity>0..1</StartMultiplicity>
        <EndMultiplicity>1</EndMultiplicity>
      </Relationship>
      <Relationship type="Association" first="3" second="1">
        <StartOrientation>Vertical</StartOrientation>
        <EndOrientation>Vertical</EndOrientation>
        <BendPoint relativeToStartShape="True">
          <X>580</X>
          <Y>776</Y>
        </BendPoint>
        <BendPoint relativeToStartShape="False">
          <X>388</X>
          <Y>870</Y>
        </BendPoint>
        <Direction>Unidirectional</Direction>
        <AssociationType>Association</AssociationType>
        <StartMultiplicity>1</StartMultiplicity>
        <EndMultiplicity>*</EndMultiplicity>
      </Relationship>
      <Relationship type="Association" first="3" second="4">
        <StartOrientation>Horizontal</StartOrientation>
        <EndOrientation>Horizontal</EndOrientation>
        <Direction>Unidirectional</Direction>
        <AssociationType>Association</AssociationType>
        <StartMultiplicity>0..*</StartMultiplicity>
        <EndMultiplicity>1..*</EndMultiplicity>
      </Relationship>
      <Relationship type="Association" first="5" second="3">
        <StartOrientation>Vertical</StartOrientation>
        <EndOrientation>Vertical</EndOrientation>
        <BendPoint relativeToStartShape="True">
          <X>526</X>
          <Y>297</Y>
        </BendPoint>
        <BendPoint relativeToStartShape="False">
          <X>526</X>
          <Y>462</Y>
        </BendPoint>
        <Direction>Unidirectional</Direction>
        <AssociationType>Association</AssociationType>
        <StartMultiplicity>1</StartMultiplicity>
        <EndMultiplicity>0..*</EndMultiplicity>
      </Relationship>
      <Relationship type="Realization" first="0" second="6">
        <StartOrientation>Horizontal</StartOrientation>
        <EndOrientation>Horizontal</EndOrientation>
      </Relationship>
      <Relationship type="Association" first="3" second="6">
        <StartOrientation>Horizontal</StartOrientation>
        <EndOrientation>Horizontal</EndOrientation>
        <Direction>Unidirectional</Direction>
        <AssociationType>Association</AssociationType>
        <StartMultiplicity>0..*</StartMultiplicity>
        <EndMultiplicity>1</EndMultiplicity>
      </Relationship>
      <Relationship type="Dependency" first="5" second="6">
        <Label>
        </Label>
        <StartOrientation>Vertical</StartOrientation>
        <EndOrientation>Vertical</EndOrientation>
        <BendPoint relativeToStartShape="True">
          <X>864</X>
          <Y>335</Y>
        </BendPoint>
        <BendPoint relativeToStartShape="False">
          <X>1610</X>
          <Y>576</Y>
        </BendPoint>
      </Relationship>
      <Relationship type="Association" first="5" second="7">
        <Label>
        </Label>
        <StartOrientation>Horizontal</StartOrientation>
        <EndOrientation>Horizontal</EndOrientation>
        <Direction>Unidirectional</Direction>
        <AssociationType>Association</AssociationType>
      </Relationship>
      <Relationship type="Realization" first="8" second="7">
        <StartOrientation>Horizontal</StartOrientation>
        <EndOrientation>Horizontal</EndOrientation>
      </Relationship>
      <Relationship type="Association" first="11" second="10">
        <Label>
        </Label>
        <StartOrientation>Horizontal</StartOrientation>
        <EndOrientation>Horizontal</EndOrientation>
        <BendPoint relativeToStartShape="True">
          <X>903</X>
          <Y>1411</Y>
        </BendPoint>
        <Direction>Unidirectional</Direction>
        <AssociationType>Association</AssociationType>
      </Relationship>
      <Relationship type="Association" first="11" second="1">
        <Label>
        </Label>
        <StartOrientation>Vertical</StartOrientation>
        <EndOrientation>Vertical</EndOrientation>
        <Direction>Unidirectional</Direction>
        <AssociationType>Association</AssociationType>
      </Relationship>
      <Relationship type="Realization" first="9" second="10">
        <StartOrientation>Horizontal</StartOrientation>
        <EndOrientation>Horizontal</EndOrientation>
      </Relationship>
      <Relationship type="Realization" first="12" second="13">
        <StartOrientation>Horizontal</StartOrientation>
        <EndOrientation>Horizontal</EndOrientation>
      </Relationship>
      <Relationship type="Association" first="14" second="13">
        <Label>
        </Label>
        <StartOrientation>Horizontal</StartOrientation>
        <EndOrientation>Vertical</EndOrientation>
        <BendPoint relativeToStartShape="True">
          <X>2433</X>
          <Y>1105</Y>
        </BendPoint>
        <BendPoint relativeToStartShape="False">
          <X>2114</X>
          <Y>1245</Y>
        </BendPoint>
        <Direction>Unidirectional</Direction>
        <AssociationType>Association</AssociationType>
      </Relationship>
      <Relationship type="Dependency" first="14" second="11">
        <Label>
        </Label>
        <StartOrientation>Horizontal</StartOrientation>
        <EndOrientation>Horizontal</EndOrientation>
        <BendPoint relativeToStartShape="True">
          <X>1925</X>
          <Y>1178</Y>
        </BendPoint>
        <BendPoint relativeToStartShape="False">
          <X>920</X>
          <Y>1244</Y>
        </BendPoint>
      </Relationship>
      <Relationship type="Association" first="17" second="2">
        <StartOrientation>Vertical</StartOrientation>
        <EndOrientation>Vertical</EndOrientation>
        <BendPoint relativeToStartShape="False">
          <X>991</X>
          <Y>1075</Y>
        </BendPoint>
        <Direction>Unidirectional</Direction>
        <AssociationType>Association</AssociationType>
      </Relationship>
      <Relationship type="Association" first="17" second="15">
        <StartOrientation>Horizontal</StartOrientation>
        <EndOrientation>Horizontal</EndOrientation>
        <Direction>Unidirectional</Direction>
        <AssociationType>Association</AssociationType>
      </Relationship>
      <Relationship type="Realization" first="16" second="15">
        <StartOrientation>Vertical</StartOrientation>
        <EndOrientation>Vertical</EndOrientation>
        <BendPoint relativeToStartShape="False">
          <X>1335</X>
          <Y>1065</Y>
        </BendPoint>
      </Relationship>
      <Relationship type="Dependency" first="14" second="5">
        <Label>
        </Label>
        <StartOrientation>Vertical</StartOrientation>
        <EndOrientation>Vertical</EndOrientation>
        <BendPoint relativeToStartShape="True">
          <X>2134</X>
          <Y>485</Y>
        </BendPoint>
        <BendPoint relativeToStartShape="False">
          <X>1007</X>
          <Y>317</Y>
        </BendPoint>
      </Relationship>
    </Relationships>
  </ProjectItem>
  <ProjectItem type="NClass.DiagramEditor.ClassDiagram.Diagram" assembly="NClass.DiagramEditor, Version=2.4.1823.0, Culture=neutral, PublicKeyToken=null">
    <Name>Player based</Name>
    <Language>CSharp</Language>
    <Entities>
      <Entity type="Class">
        <Name>company</Name>
        <Access>Public</Access>
        <Location left="890" top="1037" />
        <Size width="236" height="216" />
        <Collapsed>False</Collapsed>
        <Member type="Field">private string _companyName</Member>
        <Member type="Field">private string _companyLocation</Member>
        <Member type="Constructor">public company(string name, string location)</Member>
        <Modifier>None</Modifier>
      </Entity>
      <Entity type="Class">
        <Name>Staff</Name>
        <Access>Public</Access>
        <Location left="55" top="818" />
        <Size width="808" height="216" />
        <Collapsed>False</Collapsed>
        <Member type="Field">private string _employeeKey</Member>
        <Member type="Constructor">public Staff(string name, string email, DateTime birthdate, char gender, string address, string town, string password, string employeeKey)</Member>
        <Member type="Constructor">public Staff(string name, string email, DateTime birthdate, char gender, string address, string town, string password, string employeeKey, Company company)</Member>
        <Member type="Method">public static void GenerateEmployeeKey(string dateUTCNow, string name, string email, string birthdate)</Member>
        <Modifier>None</Modifier>
      </Entity>
      <Entity type="Class">
        <Name>Account</Name>
        <Access>Public</Access>
        <Location left="39" top="434" />
        <Size width="691" height="315" />
        <Collapsed>False</Collapsed>
        <Member type="Field">private string _name</Member>
        <Member type="Field">private string _email</Member>
        <Member type="Field">private DateTime _birthdate</Member>
        <Member type="Field">private char _gender</Member>
        <Member type="Field">private string _address</Member>
        <Member type="Field">private string _town</Member>
        <Member type="Field">private string _password</Member>
        <Member type="Field">private string _keyword</Member>
        <Member type="Constructor">public Account(string name, string email, DateTime birthdate, char gender, string address, string town, string password)</Member>
        <Member type="Method">public static string EncryptPassword(string password)</Member>
        <Member type="Method">private static byte[] GenerateKeyword()</Member>
        <Member type="Method">private static string GeneratePassword(string password, byte[] key)</Member>
        <Modifier>None</Modifier>
      </Entity>
      <Entity type="Class">
        <Name>Player</Name>
        <Access>Public</Access>
        <Location left="890" top="497" />
        <Size width="691" height="216" />
        <Collapsed>False</Collapsed>
        <Member type="Field">private string _team</Member>
        <Member type="Constructor">public Player(string name, string email, string team, DateTime birthdate, char gender, string address, string town, string password)</Member>
        <Modifier>None</Modifier>
      </Entity>
      <Entity type="Class">
        <Name>AccountManager</Name>
        <Access>Public</Access>
        <Location left="55" top="10" />
        <Size width="967" height="383" />
        <Collapsed>False</Collapsed>
        <Member type="Method">public bool AddAccount(string name, string email, string team, DateTime birthdate, char gender, string address, string town, string password)</Member>
        <Member type="Method">public bool AddAccount(string name, string email, DateTime birthdate, char gender, string address, string town, string password, string employeeKey)</Member>
        <Member type="Method">public bool AddAccount(string name, string email, DateTime birthdate, char gender, string address, string town, string password, string employeeKey, Company company)</Member>
        <Member type="Method">public bool UpdateAccount(int id, string name, string email, string team, DateTime birthdate, char gender, string address, string town, string password)</Member>
        <Member type="Method">public bool UpdateAccount(int id, string name, string email, DateTime birthdate, char gender, string address, string town, string password, string employeeKey)</Member>
        <Member type="Method">public bool UpdateAccount(int id, string name, string email, DateTime birthdate, char gender, string address, string town, string password, string employeeKey, Company company)</Member>
        <Member type="Method">public List&lt;Player&gt; GetPlayers()</Member>
        <Member type="Method">public List&lt;Account&gt; GetAccounts()</Member>
        <Member type="Method">public List&lt;Staff&gt; GetStaff()</Member>
        <Member type="Method">public bool DeleteAccount(int id)</Member>
        <Member type="Method">public bool tournamentSignup(int playerId, int tournamentId)</Member>
        <Member type="Method">public Player GetAccount(string email)</Member>
        <Member type="Method">public Staff GetAccount(string email, string employeeKey)</Member>
        <Member type="Method">public bool Login(string email, string password)</Member>
        <Member type="Method">public bool Login(string email, string password, string employeeKey)</Member>
        <Member type="Method">private bool CheckValidEmail(string email, out string key)</Member>
        <Member type="Method">private bool CheckValidPassword(string email, string password)</Member>
        <Member type="Method">private bool CheckEmployeeKey(string email, string password, string key)</Member>
        <Modifier>None</Modifier>
      </Entity>
      <Entity type="Class">
        <Name>AccountDAL</Name>
        <Access>Public</Access>
        <Location left="1749" top="60" />
        <Size width="356" height="158" />
        <Collapsed>False</Collapsed>
        <Member type="Method">private bool CheckSingleResult(MySQlCommand command)</Member>
        <Member type="Method">private DataSet CheckMultipleResults(MySQlCommand command)</Member>
        <Modifier>None</Modifier>
      </Entity>
      <Entity type="Interface">
        <Name>IAccountDAL</Name>
        <Access>Public</Access>
        <Location left="1147" top="115" />
        <Size width="434" height="299" />
        <Collapsed>False</Collapsed>
        <Member type="Method">bool AddAccount(Player account)</Member>
        <Member type="Method">bool AddAccount(Staff staff)</Member>
        <Member type="Method">bool UpdateAccount(Player player)</Member>
        <Member type="Method">bool UpdateAccount(Staff staff)</Member>
        <Member type="Method">DataSet GetPlayers()</Member>
        <Member type="Method">DateSet GetAccounts()</Member>
        <Member type="Method">DataSet GetStaff()</Member>
        <Member type="Method">bool DeleteAccount(int id)</Member>
        <Member type="Method">bool tournamentSignup(int playerId, int tournamentId)</Member>
        <Member type="Method">DataSet GetAccount(string email)</Member>
        <Member type="Method">DataSet GetAccount(string email, string employeeKey)</Member>
        <Member type="Method">bool CheckValidEmail(string email, out string key)</Member>
        <Member type="Method">bool CheckValidPassword(string email, string password)</Member>
        <Member type="Method">bool CheckEmployeeKey(string email, string password, string key)</Member>
      </Entity>
      <Entity type="Class">
        <Name>CompanyManager</Name>
        <Access>Public</Access>
        <Location left="933" top="1362" />
        <Size width="162" height="216" />
        <Collapsed>False</Collapsed>
        <Member type="Method">public List&lt;Company&gt; GetCompanys()</Member>
        <Modifier>None</Modifier>
      </Entity>
      <Entity type="Class">
        <Name>CompanyDAL</Name>
        <Access>Public</Access>
        <Location left="1251" top="1025" />
        <Size width="162" height="216" />
        <Collapsed>False</Collapsed>
        <Modifier>None</Modifier>
      </Entity>
      <Entity type="Interface">
        <Name>ICompanyDAL</Name>
        <Access>Public</Access>
        <Location left="1220" top="1351" />
        <Size width="162" height="216" />
        <Collapsed>False</Collapsed>
        <Member type="Method">DataSet GetCompanys()</Member>
      </Entity>
    </Entities>
    <Relationships>
      <Relationship type="Generalization" first="3" second="2">
        <StartOrientation>Horizontal</StartOrientation>
        <EndOrientation>Horizontal</EndOrientation>
        <BendPoint relativeToStartShape="True">
          <X>865</X>
          <Y>644</Y>
        </BendPoint>
        <BendPoint relativeToStartShape="False">
          <X>763</X>
          <Y>644</Y>
        </BendPoint>
      </Relationship>
      <Relationship type="Generalization" first="1" second="2">
        <StartOrientation>Vertical</StartOrientation>
        <EndOrientation>Vertical</EndOrientation>
      </Relationship>
      <Relationship type="Association" first="1" second="0">
        <Label>
        </Label>
        <StartOrientation>Vertical</StartOrientation>
        <EndOrientation>Horizontal</EndOrientation>
        <Direction>Unidirectional</Direction>
        <AssociationType>Association</AssociationType>
        <StartMultiplicity>0..*</StartMultiplicity>
        <EndMultiplicity>1</EndMultiplicity>
      </Relationship>
      <Relationship type="Association" first="4" second="2">
        <StartOrientation>Vertical</StartOrientation>
        <EndOrientation>Vertical</EndOrientation>
        <BendPoint relativeToStartShape="False">
          <X>242</X>
          <Y>402</Y>
        </BendPoint>
        <Direction>Unidirectional</Direction>
        <AssociationType>Association</AssociationType>
      </Relationship>
      <Relationship type="Association" first="4" second="6">
        <StartOrientation>Horizontal</StartOrientation>
        <EndOrientation>Horizontal</EndOrientation>
        <Direction>Unidirectional</Direction>
        <AssociationType>Association</AssociationType>
      </Relationship>
      <Relationship type="Realization" first="5" second="6">
        <StartOrientation>Vertical</StartOrientation>
        <EndOrientation>Horizontal</EndOrientation>
      </Relationship>
      <Relationship type="Association" first="7" second="0">
        <StartOrientation>Vertical</StartOrientation>
        <EndOrientation>Vertical</EndOrientation>
        <Direction>Unidirectional</Direction>
        <AssociationType>Association</AssociationType>
      </Relationship>
      <Relationship type="Association" first="7" second="9">
        <StartOrientation>Horizontal</StartOrientation>
        <EndOrientation>Horizontal</EndOrientation>
        <Direction>Unidirectional</Direction>
        <AssociationType>Association</AssociationType>
      </Relationship>
      <Relationship type="Realization" first="8" second="9">
        <StartOrientation>Vertical</StartOrientation>
        <EndOrientation>Vertical</EndOrientation>
      </Relationship>
    </Relationships>
  </ProjectItem>
</Project>